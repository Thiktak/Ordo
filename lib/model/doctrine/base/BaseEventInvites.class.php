<?php

/**
 * BaseEventInvites
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $membre_id
 * @property string $membre_text
 * @property boolean $is_present
 * @property integer $event_id
 * @property Event $Event
 * @property Membre $Membre
 * 
 * @method integer      getMembreId()    Returns the current record's "membre_id" value
 * @method string       getMembreText()  Returns the current record's "membre_text" value
 * @method boolean      getIsPresent()   Returns the current record's "is_present" value
 * @method integer      getEventId()     Returns the current record's "event_id" value
 * @method Event        getEvent()       Returns the current record's "Event" value
 * @method Membre       getMembre()      Returns the current record's "Membre" value
 * @method EventInvites setMembreId()    Sets the current record's "membre_id" value
 * @method EventInvites setMembreText()  Sets the current record's "membre_text" value
 * @method EventInvites setIsPresent()   Sets the current record's "is_present" value
 * @method EventInvites setEventId()     Sets the current record's "event_id" value
 * @method EventInvites setEvent()       Sets the current record's "Event" value
 * @method EventInvites setMembre()      Sets the current record's "Membre" value
 * 
 * @package    Annuaire
 * @subpackage model
 * @author     Michael MurÃ©
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventInvites extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_invites');
        $this->hasColumn('membre_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('membre_text', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_present', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id'));

        $this->hasOne('Membre', array(
             'local' => 'membre_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}